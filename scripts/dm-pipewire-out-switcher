#!/usr/bin/env bash
#
# Script name: dm-pipewire-out-switcher
# Description: Switch default output for pipewire.
# Dependencies: dmenu, fzf, rofi, pipewire, jq, pactl
# GitLab: https://www.gitlab.com/dwt1/dmscripts
# License: https://www.gitlab.com/dwt1/dmscripts/LICENSE
# Contributors: Simon Ingelsson
#               Derek Taylor

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.
set -euo pipefail
_path="$(cd "$(dirname "${BASH_SOURCE[0]}")" && cd "$(dirname "$(readlink "${BASH_SOURCE[0]}" || echo ".")")" && pwd)"
if [[ -f "${_path}/_dm-helper.sh" ]]; then
    # shellcheck disable=SC1090,SC1091
    source "${_path}/_dm-helper.sh"
else
    # shellcheck disable=SC1090
    echo "No helper-script found"
fi

# script will not hit this if there is no config-file to load
# shellcheck disable=SC1090
source "$(get_config)"

# Check if config has updates that should be displayed to the user
check_updated_config

get_default_sink() {
    pactl --format=json info | jq -r .default_sink_name
}
get_all_sinks() {
    pactl --format=json list short sinks \
        | current=$(get_default_sink) jq -r '.[] | if .name == env.current then .state="* " else .state="" end | .state + .name'
}

main() {
    choice=$(printf '%s\n' "$(get_all_sinks)" \
        | sort \
        | ${MENU} 'Sink: ' "$@") || exit 1

    if [ "$choice" ]; then
        if [[ "${choice}" == "* $(get_default_sink)" ]]; then
            exit 0
        fi
        pactl set-default-sink "${choice}"
        notify-send "Sink is now: ${choice}"
    else
        echo "Program terminated." && exit 0
    fi
}

noOpt=1
# If script is run with '-d', it will use 'dmenu'
# If script is run with '-f', it will use 'fzf'
# If script is run with '-d', it will use 'rofi'
while getopts "dfrh" arg 2>/dev/null; do
    case "${arg}" in
    d) # shellcheck disable=SC2153
        MENU=${DMENU}
        [[ "${BASH_SOURCE[0]}" == "${0}" ]] && main
        ;;
    f) # shellcheck disable=SC2153
        MENU=${FMENU}
        [[ "${BASH_SOURCE[0]}" == "${0}" ]] && main
        ;;
    r) # shellcheck disable=SC2153
        MENU=${RMENU}
        [[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "@"
        ;;
    h) help ;;
    *) printf '%s\n' "Error: invalid option" "Type $(basename "$0") -h for help" ;;
    esac
    noOpt=0
done

# If script is run with NO argument, it will use 'dmenu'
[ $noOpt = 1 ] && MENU=${DMENU} && [[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
