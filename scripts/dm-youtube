#!/usr/bin/env bash
#
# Script name: dm-youtube
# Description: Youtube subscription manager without API access
# Dependencies: dmenu, curl, a browser (brave by default)
# Gitlab: https://www.gitlab.com/dwt1/dmscripts
# License: https://www.gitlab.com/dwt1/dmscripts/LICENSE
# Contributors: HostGrady
#               Derek Taylor

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.
set -euo pipefail

_path="$(cd "$(dirname "${BASH_SOURCE[0]}")" && cd "$(dirname "$(readlink "${BASH_SOURCE[0]}" || echo ".")")" && pwd)"
if [[ -f "${_path}/_dm-helper.sh" ]]; then
    # shellcheck disable=SC1090,SC1091
    source "${_path}/_dm-helper.sh"
else
    # shellcheck disable=SC1090
    echo "No helper-script found"
fi

# script will not hit this if there is no config-file to load
# shellcheck disable=SC1090
source "$(get_config)"

# Check if config has updates that should be displayed to the user
check_updated_config

main() {
    local _feed_url _channel _video
    local _channel_id _video_id _video_list

    # Sorts the array and lets you select a channel with dmenu
    # As this is loaded from other file it is technically not defined
    # shellcheck disable=SC2154
    _channel=$(printf '%s\n' "${!youtube_channels[@]}" | sort | ${MENU} 'Select Channel:' "$@")

    # The way it's done here is most effective, it searchs for "=" then it takes
    # everything before the = sign and leaves us with our variable used in the
    # _feed_url variable
    _channel_id=$(curl -s -f -L "${youtube_channels[${_channel}]}" | grep -o "channel_id=.*" | sed 's/".*//g')
    _feed_url="https://www.youtube.com/feeds/videos.xml?channel_id=${_channel_id##*=}"
    # parse rss
    _video_list=$(parse_rss "$(curl -s "${_feed_url}")")

    _video=$(printf '%s\n' "${_video_list}" | sort -r | ${MENU} 'Select Video' "$@")
    _video_id=$(echo "${_video}" | cut -d'|' -f2 | sed -e 's/^[ \t]*//')

    if [[ -n ${_video_id} ]]; then
        # After the video is chosen, run it in your web browser
        # shellcheck disable=SC2154
        ${DMBROWSER} "https://www.youtube.com/watch?v=${_video_id}"
    fi
}

noOpt=1
# If script is run with '-d', it will use 'dmenu'
# If script is run with '-f', it will use 'fzf'
# If script is run with '-d', it will use 'rofi'
while getopts "dfrh" arg 2>/dev/null; do
    case "${arg}" in
    d) # shellcheck disable=SC2153
        MENU=${DMENU}
        [[ "${BASH_SOURCE[0]}" == "${0}" ]] && main
        ;;
    f) # shellcheck disable=SC2153
        MENU=${FMENU}
        [[ "${BASH_SOURCE[0]}" == "${0}" ]] && main
        ;;
    r) # shellcheck disable=SC2153
        MENU=${RMENU}
        [[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "@"
        ;;
    h) help ;;
    *) printf '%s\n' "Error: invalid option" "Type $(basename "$0") -h for help" ;;
    esac
    noOpt=0
done

# If script is run with NO argument, it will use 'dmenu'
[ $noOpt = 1 ] && MENU=${DMENU} && [[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
