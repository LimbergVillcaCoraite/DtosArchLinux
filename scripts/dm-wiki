#!/usr/bin/env bash
#
# Script name: dm-wiki
# Description: Search an offline copy of the Arch Wiki.
# Dependencies: dmenu, arch-wiki-docs
# GitLab: https://www.gitlab.com/dwt1/dmscripts
# License: https://www.gitlab.com/dwt1/dmscripts/LICENSE
# Contributors: Derek Taylor
#               marvhus

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.
set -euo pipefail
_path="$(cd "$(dirname "${BASH_SOURCE[0]}")" && cd "$(dirname "$(readlink "${BASH_SOURCE[0]}" || echo ".")")" && pwd)"
if [[ -f "${_path}/_dm-helper.sh" ]]; then
    # shellcheck disable=SC1090,SC1091
    source "${_path}/_dm-helper.sh"
else
    # shellcheck disable=SC1090
    echo "No helper-script found"
fi

# script will not hit this if there is no config-file to load
# shellcheck disable=SC1090
source "$(get_config)"

# Check if config has updates that should be displayed to the user
check_updated_config

wikidir="/usr/share/doc/arch-wiki/html/"
lang=""

languages() {
    langs="$(find ${wikidir} -maxdepth 1 -type d -not -path "${wikidir}")"
    choice=$(printf '%s\n' "${langs[@]}" \
        | sed 's/.*\///' \
        | sort -g \
        | ${MENU} 'Language: ' "$@") || exit 1

    if [ "$choice" ]; then
        lang=$(printf '%s\n' "${choice}/")
        wikipages "$@"
    else
        echo "Program terminated." && exit 0
    fi
}

wikipages() {
    wikidocs="$(find ${wikidir}"${lang}" -iname "*.html")"
    choice=$(printf '%s\n' "${wikidocs[@]}" \
        | cut -d '/' -f8- \
        | sed -e 's/_/ /g' -e 's/.html//g' \
        | sort -g \
        | ${MENU} 'Arch Wiki Docs: ' "$@") || exit 1

    if [ "$choice" ]; then
        article=$(printf '%s\n' "${wikidir}${lang}${choice}.html" | sed 's/ /_/g')
        ${DMBROWSER} "$article"
    else
        echo "Program terminated." && exit 0
    fi
}

noOpt=1
# If script is run with '-d', it will use 'dmenu'
# If script is run with '-f', it will use 'fzf'
# If script is run with '-d', it will use 'rofi'
while getopts "dfrh" arg 2>/dev/null; do
    case "${arg}" in
    d) # shellcheck disable=SC2153
        MENU=${DMENU}
        [[ "${BASH_SOURCE[0]}" == "${0}" ]] && languages
        ;;
    f) # shellcheck disable=SC2153
        MENU=${FMENU}
        [[ "${BASH_SOURCE[0]}" == "${0}" ]] && languages
        ;;
    r) # shellcheck disable=SC2153
        MENU=${RMENU}
        [[ "${BASH_SOURCE[0]}" == "${0}" ]] && languages "@"
        ;;
    h) help ;;
    *) printf '%s\n' "Error: invalid option" "Type $(basename "$0") -h for help" ;;
    esac
    noOpt=0
done

# If script is run with NO argument, it will use 'dmenu'
[ $noOpt = 1 ] && MENU=${DMENU} && [[ "${BASH_SOURCE[0]}" == "${0}" ]] && languages "$@"
